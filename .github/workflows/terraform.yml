name: 'Terraform CI'

on:
  workflow_dispatch:
    inputs:
      command:
        type: choice
        description: Select Terraform command to execute
        default: plan
        options:
          - plan
          - apply
          - destroy

jobs:
  build:
    runs-on: ubuntu-latest
    name: terraform ${{ github.event.inputs.command }}

    steps:
      # Checkout the selected branch from GitHub's standard branch selector
      - name: Checkout terraform branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}  # Automatically check out the selected branch

      # Setup Terraform
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2.0.2
      
      - name: Retrieve SSH Key from Azure Storage
        run: |
          echo "Retrieving SSH Key from Azure Storage..."
          az storage blob download --container-name key --name az_ssh_key.pem --file az_ssh_key.pem --account-name constantine2zu --auth-mode key --account-key ${{ secrets.ARM_ACCESS_KEY }}
          chmod 600 az_ssh_key.pem
          echo "SSH Key retrieved successfully."
        shell: bash
      
        # Run Terraform command
      - name: Terraform Run
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }} 
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}  # Pass the DB password
          TF_VAR_hetzner_dns_key: ${{ secrets.HETZNER_DNS_KEY }}  # Pass the Hetzner DNS key
          TF_VAR_arm_access_key: ${{ secrets.ARM_ACCESS_KEY}}
        run: |
          echo "INFO: started by ${{ github.actor }}"
          echo "INFO: start $(date -u)"
          SECONDS=0

          WORKING_DIR="."
          echo "RUN: cd ${WORKING_DIR}"
          cd "$WORKING_DIR"

          echo "RUN: terraform init"
          terraform init

          echo "RUN: terraform fmt -check"
          terraform fmt -check

          echo "RUN: terraform validate"
          terraform validate

          # Handling different Terraform commands based on input
          if [[ "${{ github.event.inputs.command }}" == "plan" ]]; then
              echo "RUN: terraform plan"
              terraform plan
          elif [[ "${{ github.event.inputs.command }}" == "apply" ]]; then
              echo "RUN: terraform apply -input=false -auto-approve -lock=false"
              terraform apply -input=false -auto-approve -lock=false
          elif [[ "${{ github.event.inputs.command }}" == "destroy" ]]; then
              echo "RUN: terraform destroy -input=false -auto-approve -lock=false"
              terraform destroy -input=false -auto-approve -lock=false
          fi

          echo "INFO: finished at $(date -u)"
          echo "INFO: duration $(($SECONDS / 60)) min $(($SECONDS % 60)) sec"

    env:
      DO_TOKEN: ${{ secrets.DO_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_KEY }}
